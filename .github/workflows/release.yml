name: Release
on:
  push:
    tags: v*

jobs:
  sdist-release:
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set things up
      run: ./ci/run-on-linux.sh ./ci/before-deploy.sh
      env:
        DISTRO: fedora:latest

    - name: Upload sdist
      uses: actions/upload-artifact@v2
      with:
        path: ./dist/*.tar.gz
        name: artifact

    - name: Deploy stable docs
      uses: JamesIves/github-pages-deploy-action@3.7.1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        BRANCH: gh-pages
        FOLDER: ci_docs_build/html
        TARGET_FOLDER: stable

    - name: Create release
      uses: actions/create-release@v1
      id: cr
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}

    - id: tarball
      run: echo "::set-output name=tarball::`ls tag_build/*.tar.gz | awk -F/ '{print $2}'`"

    - id: checksum
      run: echo "::set-output name=checksum::`ls tag_build/*.sha512sum | awk -F/ '{print $2}'`"

    - name: Upload release tarball
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.cr.outputs.upload_url }}
        asset_path: tag_build/${{ steps.tarball.outputs.tarball }}
        asset_name: ${{ steps.tarball.outputs.tarball }}
        asset_content_type: application/octet-stream

    - name: Upload release checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.cr.outputs.upload_url }}
        asset_path: tag_build/${{ steps.checksum.outputs.checksum }}
        asset_name: ${{ steps.checksum.outputs.checksum }}
        asset_content_type: text/plain

  wheel:
    needs:
    - sdist-release

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: macOS-10.15
          version: cp310-macosx_x86_64
        - os: macOS-10.15
          version: cp310-macosx_arm64
        - os: macOS-10.15
          version: cp39-macosx_x86_64
        - os: macOS-10.15
          version: cp39-macosx_arm64
        - os: macOS-10.15
          version: cp38-macosx_x86_64
        - os: macOS-10.15
          version: cp38-macosx_arm64
        - os: macOS-10.15
          version: cp37-macosx_x86_64
        - os: macOS-10.15
          version: cp36-macosx_x86_64

        - os: windows-2019
          version: cp310-win_amd64
        - os: windows-2019
          version: cp310-win32
        - os: windows-2019
          version: cp39-win_amd64
        - os: windows-2019
          version: cp39-win32
        - os: windows-2019
          version: cp38-win_amd64
        - os: windows-2019
          version: cp38-win32
        - os: windows-2019
          version: cp37-win_amd64
        - os: windows-2019
          version: cp37-win32
        - os: windows-2019
          version: cp36-win_amd64
        - os: windows-2019
          version: cp36-win32

    steps:
    - name: Set up environment
      if: startsWith(matrix.os, 'windows-')
      shell: bash
      run: |
        choco.exe install \
          --no-progress \
          --yes \
          --ignore-detected-reboot \
          --allow-downgrade \
          --install-arguments "'ADDLOCAL=ALL'" \
          ${{ endsWith(matrix.version, '-win32') && '--x86' || '' }} mitkerberos || true

        echo "C:\Program Files${{ endsWith(matrix.version, '-win32') && ' (x86)' || '' }}\MIT\Kerberos\bin;$PATH" >> $GITHUB_PATH

    - name: Download sdist
      uses: actions/download-artifact@v2
      with:
        name: artifact
        path: ./

    - name: Extract sdist
      shell: bash
      run: |
        tar xf gssapi-*.tar.gz
        mv gssapi-*/* .
        rm -r gssapi-*/
        rm gssapi-*.tar.gz

    - name: Build wheel
      uses: pypa/cibuildwheel@v2.1.2
      env:
        CIBW_ARCHS: all
        CIBW_TEST_SKIP: '*_arm64'
        CIBW_BUILD: ${{ matrix.version }}
        CIBW_BUILD_VERBOSITY: 1

    - name: Upload wheel
      uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl
        name: artifact

  pypi:
    needs:
    - wheel

    runs-on: ubuntu-latest

    steps:
    - name: Download sdist and wheels
      uses: actions/download-artifact@v2
      with:
        name: artifact
        path: ./dist

    - name: Deploy to PyPI
      uses: pypa/gh-action-pypi-publish@v1.1.0
      with:
        user: __token__
        password: ${{ secrets.pypi_password }}
