name: Build
on:
  push:
    branches-ignore: gh-pages
    tags: v*
  pull_request: null

jobs:
  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Select python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - name: Build sdist
      run: |
        python -m pip install build
        python -m build --sdist
      env:
        GSSAPI_SUPPORT_DETECT: false
        GSSAPI_LINKER_ARGS: ''
        GSSAPI_COMPILER_ARGS: ''

    - name: Upload sdist
      uses: actions/upload-artifact@v4
      with:
        name: artifact-sdist
        path: ./dist/*.tar.gz

  build_wheels:
    name: Build wheels
    needs:
    - build_sdist

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-2022
          version: cp312-win_amd64
        - os: windows-2022
          version: cp312-win32
        - os: windows-2022
          version: cp311-win_amd64
        - os: windows-2022
          version: cp311-win32
        - os: windows-2022
          version: cp310-win_amd64
        - os: windows-2022
          version: cp310-win32
        - os: windows-2022
          version: cp39-win_amd64
        - os: windows-2022
          version: cp39-win32
        - os: windows-2022
          version: cp38-win_amd64
        - os: windows-2022
          version: cp38-win32
        - os: windows-2022
          version: cp37-win_amd64
        - os: windows-2022
          version: cp37-win32

    steps:
    - name: Set up environment
      if: startsWith(matrix.os, 'windows-')
      shell: bash
      run: |
        choco.exe install \
          --no-progress \
          --yes \
          --ignore-detected-reboot \
          --allow-downgrade \
          --install-arguments "'ADDLOCAL=ALL'" \
          ${{ endsWith(matrix.version, '-win32') && '--x86' || '' }} mitkerberos || true

        echo "C:\Program Files${{ endsWith(matrix.version, '-win32') && ' (x86)' || '' }}\MIT\Kerberos\bin;$PATH" >> $GITHUB_PATH

    - name: Download gssapi sdist
      uses: actions/download-artifact@v4
      with:
        name: artifact-sdist
        path: ./

    - name: Extract sdist
      shell: bash
      run: |
        tar xf gssapi-*.tar.gz
        mv gssapi-*/* .
        rm -r gssapi-*/
        rm gssapi-*.tar.gz

    - name: Build wheel
      uses: jborean93/cibuildwheel@c753cd282d1e150e2d3f7534a3e25004d6c2cf5f
      env:
        CIBW_ARCHS: all
        CIBW_TEST_SKIP: '*_arm64'
        CIBW_BUILD: ${{ matrix.version }}
        CIBW_BUILD_VERBOSITY: 1

    - name: Upload wheel
      uses: actions/upload-artifact@v4
      with:
        path: ./wheelhouse/*.whl
        name: artifact-wheel-${{ matrix.version }}
